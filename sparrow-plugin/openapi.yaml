openapi: 3.0.1
info:
  title: Receipt Assistant
  description: A plugin that allows the user to read, store and review receipts using ChatGPT. If you do not know the user's username, ask them first before making queries to the plugin. Otherwise, use the username "global".
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:
  /upload_receipt_info/{username}:
    get:
      operationId: getUploadReceiptInfo
      summary: Get info how to upload a receipt
      parameters:
        - in: path
          name: username
          schema:
              type: string
          required: true
          description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUploadReceiptInfoResponse'
  /receipt_data/{username}:
    get:
      operationId: getReceiptData
      summary: Fetch receipt data based on provided receipt id
      parameters:
        - in: path
          name: username
          schema:
              type: string
          required: true
          description: The name of the user.
        - in: query
          name: receipt_id
          required: true
          schema:
              type: string
          description: Receipt id to fetch processed data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReceiptDataResponse'
  /receipt_storage_db/{username}:
    post:
      operationId: addReceiptDataToDB
      summary: Store ChatGPT output processed receipt data (JSON format) in database
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
        - in: query
          name: receipt_id
          required: true
          schema:
            type: string
          description: Receipt id to store the data.
        - in: query
          name: receipt_json
          required: true
          schema:
            type: string
          description: Receipt JSON data processed by ChatGPT.
      responses:
        "200":
          description: OK
    get:
      operationId: getReceiptDataFromDB
      summary: Fetch previously stored receipt content from backend DB based on provided receipt id
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
        - in: query
          name: receipt_id
          required: true
          schema:
            type: string
          description: Receipt id to fetch stored data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReceiptDataDBResponse'
    delete:
      operationId: deleteReceiptDataFromDB
      summary: Delete previously stored receipt content from backend DB based on provided receipt id
      parameters:
        - in: path
          name: username
          schema:
              type: string
          required: true
          description: The name of the user.
        - in: query
          name: receipt_id
          required: true
          schema:
              type: string
          description: Receipt id to delete stored data.
      responses:
          "200":
            description: OK
  /receipts_storage_ids_db/{username}:
    get:
      operationId: getReceiptsDataIdsFromDB
      summary: Fetch all previously stored receipt ids from backend DB
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReceiptsDataIdsDBResponse'
  /receipts_storage_content_db/{username}:
    get:
      operationId: getReceiptsDataContentFromDB
      summary: Fetch all previously stored receipt content from backend DB
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReceiptsDataContentDBResponse'
components:
  schemas:
    getUploadReceiptInfoResponse:
      type: object
      properties:
        upload_receipt_info:
          type: string
          description: Info how to upload a receipt.
    getReceiptDataResponse:
      type: object
      properties:
          receipt_data:
            type: array
            items:
              type: string
            description: Array with receipt data from OCR result.
    getReceiptDataDBResponse:
      type: object
      properties:
        receipt_content:
          type: string
          description: JSON data representing stored receipt content.
    getReceiptsDataIdsDBResponse:
      type: object
      properties:
        receipt_ids:
          type: array
          items:
            type: string
          description: Array with receipt ids.
    getReceiptsDataContentDBResponse:
      type: object
      properties:
        receipt_content:
          type: array
          items:
            type: string
          description: Receipt content JSON.